name: Deploy Hugo site to Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1) 코드
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Hugo Extended (SCSS 파이프라인 지원)
      - name: Setup Hugo (extended)
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      # 3) Dart Sass (CLI) 설치 ─ Hugo v0.114.0+ 권장 방식
      - name: Install Dart Sass (CLI)
        env:
          # 필요하면 UI에서 변경 가능: Actions → Run workflow
          DART_SASS_VERSION: '1.91.0'
        run: |
          set -euxo pipefail
          url="https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/dart-sass-${DART_SASS_VERSION}-linux-x64.tar.gz"

          # 릴리스에서 정확히 받은 뒤 압축 해제
          curl -fSL "$url" -o /tmp/dart-sass.tgz
          tar -xzf /tmp/dart-sass.tgz -C /tmp

          # 폴더 통째 보존 + 실행권한 부여
          sudo rm -rf /opt/dart-sass
          sudo mv /tmp/dart-sass /opt/dart-sass
          sudo chmod +x /opt/dart-sass/sass

          # PATH 전파(다음 스텝부터 유효)
          echo /opt/dart-sass >> "$GITHUB_PATH"

          # 같은 스텝 내 검증은 절대경로로
          /opt/dart-sass/sass --version

      # 4) Hugo Modules 캐시
      - name: Cache Hugo Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/hugo_mod
            **/go.sum
          key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.mod') }}
          restore-keys: ${{ runner.os }}-hugomod-

      # 5) (선택) 환경 출력: 어떤 트랜스파일러가 잡혔는지 확인 가능
      - name: Hugo env
        run: hugo env

      # 6) 빌드
      - name: Build
        run: hugo --minify

      # 7) Pages 아티팩트 업로드(전용)
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
